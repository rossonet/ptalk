buildscript {
  repositories {
    mavenCentral()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "com.gorylenko.gradle-git-properties:gradle-git-properties:2.4.0"
    classpath 'de.undercouch:gradle-download-task:5.3.1'
  }
}

description = "Ptalk - Rossonet chatbot"
group = 'net.rossonet.ptalk'
version = '0.0.2'

ext {
  sourceCompatibility = 1.8
  debianName = "${project.name}"
  packageName = "${project.name}"
  ossrhPassword = System.getenv('OSSRH_PASSWORD')
}

repositories {
  mavenCentral()
  jcenter()
}

apply plugin: 'eclipse'
apply plugin: "com.gorylenko.gradle-git-properties"

task eclipseClosedDependencies {}

task eclipseClosedDependencies_ {}

eclipse {
  classpath {
    downloadJavadoc = true
    downloadSources = true
  }
}

task view { doLast { println "Working on project ${project.name} [ ${project.description} ]" } }

gitProperties {
  failOnNoGitDirectory = false
  customProperty 'component', "${project.name}"
  dateFormat = "yyyy-MM-dd HH:mm:ssZ"
  dateFormatTimeZone = 'GMT'
}

task theiaIdeBackend(type: Exec) {
  workingDir "./"
  commandLine 'docker', 'run', '--init', '--rm', '-p', '3000:3000', '-d', '-v', "${projectDir}:/home/project:cached", 'rossonet/theia-ide:latest'
}

task theiaIdeBackendNoCached(type: Exec) {
  workingDir "./"
  commandLine 'docker', 'run', '--init', '--rm', '-p', '3000:3000', '-d', '-v', "${projectDir}:/home/project", 'rossonet/theia-ide:latest'
}

task theiaIdeBackendNoVolume(type: Exec) {
  workingDir "./"
  commandLine 'docker', 'run', '--init', '--rm', '-p', '3000:3000', '-d', '--name', "docker-ide-${project.name}", 'rossonet/theia-ide:latest'
}

task theiaIdeBackendCopy(type: Exec) {
  theiaIdeBackendCopy.dependsOn("theiaIdeBackendNoVolume")
  workingDir "./"
  commandLine 'docker', 'cp', '.', "docker-ide-${project.name}:/home/project/"
}

task theiaIdeBackendStart(type: Exec) {
  description 'Run Theia IDE container with docker'
  theiaIdeBackendStart.dependsOn("theiaIdeBackendCopy")
  group "IDE"
  workingDir "./"
  commandLine 'docker', 'exec', '-u', 'root', "docker-ide-${project.name}", '/bin/chown', '-R', 'theia:theia', '/home/project'
  commandLine 'docker', 'exec', '-u', 'root', "docker-ide-${project.name}", '/bin/chown', '-R', 'theia:theia', '/home/theia'
  doLast { println "\n\n*** You can find the Theia IDE at http://localhost:3000 ***" }
  doLast { println "To shutdown the IDE:\ndocker stop docker-ide-${project.name}\n- save your work on repository before!\n\n" }
}

task printTheiaIdeBackendDockerCommand(type: Exec) {
  workingDir "./"
  commandLine 'echo', 'docker', 'run', '--init', '-p', '3000:3000', '-d', '--name', "docker-ide-${project.name}", 'rossonet/theia-ide:latest'
}

task theiaIdeLocalBrowser(type: Exec) {
  group "IDE"
  description 'Open browser to local Theia IDE'
  workingDir "./"
  commandLine 'xdg-open', 'http://localhost:3000'
}

task buildBottegaioTerminalClient() {
  group "Bottegaio Terminal Client"
  description 'Build Bottegaio Terminal Client in fat jar format'
  dependsOn ":ptalk-bottegaio-console:shadowJar"
}

gradle.taskGraph.beforeTask { Task task ->
  copy {
    from 'ptalk-base-api/ptalk-base-api.proto'
    into 'ptalk-channel-api/src/main/proto/'
  }
  copy {
    from 'ptalk-base-api/ptalk-base-api.proto'
    into 'ptalk-nlu-api/src/main/proto/'
  }
  copy {
    from 'ptalk-base-api/ptalk-base-api.proto'
    into 'ptalk-ability-api/src/main/proto/'
  }
}

task copyProtosToJupyter() {
  group "GRPC ProtoBuf"
  description 'Copy proto file to Jupyter directories'
  copy {
    from 'ptalk-base-api/ptalk-base-api.proto'
    into 'tools/jupyter/channel/'
  }
  copy {
    from 'ptalk-base-api/ptalk-base-api.proto'
    into 'tools/jupyter/nlu/'
  }
  copy {
    from 'ptalk-base-api/ptalk-base-api.proto'
    into 'tools/jupyter/ability/'
  }
  copy {
    from 'ptalk-channel-api/src/main/proto/ptalk-channel-api.proto'
    into 'tools/jupyter/channel/'
  }
  copy {
    from 'ptalk-nlu-api/src/main/proto/ptalk-nlu-api.proto'
    into 'tools/jupyter/nlu/'
  }
  copy {
    from 'ptalk-ability-api/src/main/proto/ptalk-ability-api.proto'
    into 'tools/jupyter/ability/'
  }
   copy {
    from 'ptalk-channel-grpc/src/main/proto/ptalk-channel-grpc.proto'
    into 'tools/jupyter/grpc-client/'
  }
}

